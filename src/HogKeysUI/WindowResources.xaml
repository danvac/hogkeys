<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"
        xmlns:vm="clr-namespace:HogKeysUI.ViewModel"
        xmlns:vw="clr-namespace:HogKeysUI.Views"
        xmlns:ignore="http://www.ignore.com"
        mc:Ignorable="d ignore"
    >
    <!--
    Template for Displaying the BoardViewModel in the BoardsListView
    -->
    <DataTemplate x:Key="BoardTemplate" x:Name="BoardTemplate">
        <Grid Height="50" HorizontalAlignment="Stretch" Margin="0,2" Background="Green">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Rectangle Fill="Gray" RadiusX="1" RadiusY="1" Stroke="#8D000000" Visibility="{Binding Enabled}">
               
            </Rectangle>
            <StackPanel>

                <TextBlock Text="{Binding Path=Model.Name}" FontSize="18"  Foreground="White" Margin="5,0,0,0" >
                     <TextBlock.ContextMenu>
                    <ContextMenu HasDropShadow="True">
                        <MenuItem Header="Show Inputs" Command="{Binding Path=ShowInputsCommand}"/>
                        <MenuItem Header="Show Outputs" Command="{Binding Path=ShowOutputsCommand}" />
                    </ContextMenu>
                </TextBlock.ContextMenu>
                </TextBlock>
                <TextBlock Text="{Binding Path=Model.Type}" FontSize="12"  Foreground="White" Margin="10,0,0,0" />
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <cmd:EventToCommand Command="{Binding Path=TestCommand,Source={StaticResource Locator}}"
                                                CommandParameter="{Binding Path=Model.Name}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
            ItemTemplate="{StaticResource ClosableTabItemTemplate}"
           Margin="4"
      />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:SettingsViewModel}">
        <vw:Settings/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:InputsViewModel}">
        <vw:InputsListView/>
    </DataTemplate>

    <LinearGradientBrush x:Key="Brush_HeaderBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#66000088" Offset="0" />
        <GradientStop Color="#BB000088" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border 
            Background="{StaticResource Brush_HeaderBackground}" 
            BorderBrush="LightGray" 
            BorderThickness="1" 
            CornerRadius="5" 
            Margin="4" 
            Padding="4" 
            SnapsToDevicePixels="True" 
            >
                        <TextBlock 
              FontSize="14"
              FontWeight="Bold"
              Foreground="White" 
              HorizontalAlignment="Center"  
              Text="{TemplateBinding Content}" 
              />
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
